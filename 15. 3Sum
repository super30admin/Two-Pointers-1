class Solution {
    public List<List<Integer>> threeSum(int[] nums) 
    {
        List<List<Integer>> result = new ArrayList<>();
        int n = nums.length;
        if(nums == null || nums.length==0)
        {
            return result;
        }
        Arrays.sort(nums);
        
        for(int i=0;i<n-2;i++)
        {
            if(i > 0 && nums[i] ==nums[i-1]) continue;
            int left = i+1;
            int right = n-1;
            
            while(left < right)
            {
                int curr = nums[i] + nums[left] + nums[right];
                if(curr == 0)
                {
                    List<Integer> li = Arrays.asList(nums[i], nums[left],nums[right]);
                        result.add(li);
                        left++;
                    right--;
                    
                    while(left < right &&nums[left] == nums[left-1]) left++;
                    while(left < right && nums[right] == nums[right+1]) right--;
                }
            
            else if(curr < 0)
            {
                left++;
            }
            
            else
            {
                right --;
            }
                
        }
        
        }
        return result ;
    }
}
//Time : O(n^2logn)
