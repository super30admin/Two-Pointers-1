class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int n= nums.length;
        List<List<Integer>> out = new ArrayList<>();
        Arrays.sort(nums);
        for(int i=0;i<n-2;i++){
            if((i!=0 && nums[i] == nums[i-1])){
                    continue;
            }
            int l = i+1;
            int r = n-1;
            while(l<r){
                int sum = nums[i] + nums[l] + nums[r];
                if(sum == 0){
                    out.add(Arrays.asList(nums[i],nums[l],nums[r]));
                    l++;
                    r--;
                    
                    while(l<r && nums[l-1]==nums[l]){
                        l++;
                    }
                    while(l<r && nums[r]==nums[r+1]){
                        r--;
                    }
                }
                else if(sum< 0){
                    l++;
                }
                else{
                    r--;
                }
            }
            
        }
        
        return out;
    }
}


// Time Complexity : O(n)
// Space Complexity : O(1)
