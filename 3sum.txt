//T : O(N^2)
//S : O(1)
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        if(nums.size() == 0) return res;
        
        sort(nums.begin(), nums.end());
        
        for(int i=0; i<nums.size();i++){
            if(i>0 && nums[i-1]==nums[i]) continue;
            int left = i+1;
            int right = nums.size()-1;
            
            while(left<right){
                if(nums[i]+nums[left]+nums[right] < 0) left++;
                else if(nums[i]+nums[left]+nums[right] > 0) right--;
                else {
                    res.push_back({nums[i], nums[left++], nums[right--]}); 
                    while(left<right && nums[left-1]==nums[left]) left++;
                    while(left<right && nums[right+1]==nums[right]) right--;
                }
            }
        }
        
        return res;
        
    }
};