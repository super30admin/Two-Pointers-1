#time complexity: O(n)
#space complexity: O(1)
#Did it run on leetcode: yes
class Solution:
    def maxArea(self, height: List[int]) -> int:
        left = 0
        right = len(height)-1
        maxarea = 0
        while(left<right):
            currentarea = min(height[left], height[right])*(right-left)
            maxarea = max(maxarea, currentarea)

            if height[left]<height[right]:
                left+=1
            else:
                right-=1

        return maxarea
