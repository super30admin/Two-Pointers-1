Time Complexity = O(n)
Space = O(1)

class Solution:
    def maxArea(self, height: List[int]) -> int:
        #null case
        if len(height) == 0 or height == None:
            return
        Max = 0
        n = len(height)
        left = 0
        right = n-1
        
        while left < right:
            Max = max(Max, (min(height[left], height[right]) * (right-left)))
            if height[left] <= height[right]:
                left = left + 1
            else:
                right = right - 1
                
        return Max
                