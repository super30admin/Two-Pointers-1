Time Complexity = O(n)
Space Complexity = O(1)

class Solution:
    def swap(self,lst,a,b):
            temp = lst[a]
            lst[a] = lst[b]
            lst[b] = temp
            
    def sortColors(self, nums: List[int]) -> None:
        """
        Do not return anything, modify nums in-place instead.
        """
        n = len(nums)
        low = 0
        mid = 0
        high = n-1
        while(mid<=high):
            if(nums[mid] == 2):
                self.swap(nums, mid, high)
                high = high - 1
            elif(nums[mid] == 0):
                self.swap(nums, mid, low)
                low = low +1
                mid = mid +1
            else:
                mid = mid +1
            
        