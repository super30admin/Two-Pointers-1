//tc: O(n)
//sc: O(1)
//accepted on leetcode: yes
class Solution {
    public void sortColors(int[] nums) {
        if (nums == null || nums.length == 0) return;
        int low = 0; int high = nums.length-1;int mid = low;
        while (mid<=high) {
            if (nums[mid]==2) { //pushing number 2 to end and for high
                swap(nums,mid,high);
                high--;
            }
            else if(nums[mid]==0){ //pushing number 0 to first of array and low
                swap(nums,low,mid);
                low++;
                mid++;
            }
            else { //pushing 1 for mid
                mid++;
            }
        }
    }
    private void swap(int[] nums, int i, int j ){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
