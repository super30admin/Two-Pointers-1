// Time Complexity : O(n)
// Space Complexity : O(1)
// Did this code successfully run on Leetcode : yes
// Any problem you faced while coding this :
coming to a solution using three pointer low, mid and high

// Your code here along with comments explaining your approach
class Solution {
    public void sortColors(int[] nums) {
        int low =0, high = nums.length -1, mid = 0;
        
        while(mid<=high)
        {
            if(nums[mid] == 1)
            {
                swap(nums, low, mid);
                mid++;
            } 
            else if(nums[mid] == 0)
            {
                swap(nums, low, mid);
                low++;
                mid++;
            }
            else
            {
                swap(nums, mid, high);
                high--;
            }
            
        }
    }
    
    public void swap (int[] nums, int p1, int p2)
    {
       int temp = nums[p1];
        nums[p1] = nums[p2];
        nums[p2] =temp;
    }
   
     
}
