Time: O(n^2); O(n) for swapping; O(n) for traversing through all elements
Space: O(1)

class Solution {
	public void sortColors(int[] nums) {
		if(nums == null || nums.length ==0) return;
		int low = 0; int mid =0; int high = nums.length-1;
		while(mid <= high)
		{
			if(nums[mid] == 1)
				mid++;
			else if(nums[mid] == 2) 
			{
				swap(nums, mid, high); 
				high--; 
			}
			else{
				swap(nums,mid, low);
				low++; 
				mid++;
			}
		}  
	}

	private void swap(int[] nums, int i, int j)
	{
		int temp = nums[i];
		nums[i] = nums[j];
		nums[j] = temp;
	}
}
