class Solution {
    public void sortColors(int[] nums) {
        if(nums == null || nums.length == 0){
            return;
        }
        int n = nums.length;
        int l = 0;
        int r = n-1;
        
        int curr = 0;
        while(curr<=r){
            if(nums[curr] == 0){
                swap(nums,curr,l);
                l +=1;
                curr += 1;
            }
            else if(nums[curr]==1){
                curr++;
            }
            else{
                swap(nums,curr,r);
                r -= 1;
            }
        }
    }
    private void swap(int[] nums,int curr, int bound){
        int temp = nums[curr];
        nums[curr] = nums[bound];
        nums[bound] = temp;
    }
}

//Time Complexity : O(n)
//Space Complexity : O(1)
